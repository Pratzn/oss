<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!-- If you want to use this XML , please enable import of root-context.xml. -->

    <description>Application context - data access -related XML definition</description>


    <!-- [Set of data source] -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="defaultAutoCommit" value="false" />
    </bean>

    <!-- [Setting Transaction Manager] -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- [Set of declarative transaction] -->
    <!-- AOP setting of transaction -->
    <aop:config>
        <aop:advisor pointcut="@within(org.springframework.stereotype.Service)"
                advice-ref="transactionAdvice" />
    </aop:config>

    <!-- Transaction advice -->
    <tx:advice id="transactionAdvice">
        <tx:attributes>
            <tx:method name="create*" read-only="false" rollback-for="java.lang.Exception" />
            <tx:method name="update*" read-only="false" rollback-for="java.lang.Exception" />
            <tx:method name="delete*" read-only="false" rollback-for="java.lang.Exception" />
            <tx:method name="read*" read-only="true" />
        </tx:attributes>
    </tx:advice>


    <!-- [Setting transactions with annotations] -->
    <!-- @TransactionalAnnotation , if you want to apply the transaction and application
         Order to unify the inner , remove the set of declarative transaction , please remove the comment .-->
    <tx:annotation-driven />
    


    <!-- [MyBatis Setting] -->
    <!-- Cooperation for Bean set of Spring and MyBatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeHandlers">
            <array>
                <bean class="com.github.pratzn.oss.mybatis.type.DateTimeTypeHandler"/>
            </array>
        </property>
        <property name="configLocation" value="classpath:mybatis-mapper-config.xml" />
    </bean>

    <!-- Import of Mapper configuration file-->
    <!-- Mapper - Mapper project that generated the class configuration file (when creating the project
          Please import the is automatically generated).
    -->

    <import resource="classpath:oss-dao-context.xml" />
    <import resource="classpath:oss-logic-context.xml" />


</beans>
